<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.li.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="cn.li.pojo.Order">
    <!--@mbg.generated-->
    <!--@Table order-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="reserver_count" jdbcType="INTEGER" property="reserverCount"/>
    <result column="is_comment" jdbcType="INTEGER" property="isComment"/>
    <result column="order_status" jdbcType="INTEGER" property="orderStatus"/>
    <result column="house_type_id" jdbcType="INTEGER" property="houseTypeId"/>
    <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
    <association property="client" javaType="cn.li.pojo.Client">
      <id column="id" property="id"/>
      <result column="clientName" property="name"/>
    </association>
    <association property="employee" javaType="cn.li.pojo.Employee">
      <id column="id" property="id"/>
      <result column="empName" property="name"/>
    </association>
    <!--<collection property="houseDetailList" ofType="cn.li.pojo.OrderHouseDetail">-->
      <!--<id column="houseOrderId" property="id"/>-->
      <!--<result column="house_code" property="houseCode"/>-->
      <!--<result column="houseType" property="houseTypeName"/>-->
      <!--<result column="houseMoney" property="money"/>-->
      <!--<result column="start_date" property="startDate"/>-->
      <!--<result column="end_date" property="endDate"/>-->
      <!--<result column="house_type_id" property="houseTypeId"/>-->
    <!--</collection>-->
    <!--<collection property="productDetailList" ofType="cn.li.pojo.OrderProductDetail">-->
      <!--<id column="productOrderId" property="id"/>-->
      <!--<result column="order_Id" property="orderId"/>-->
      <!--<result column="product_id" property="productId"/>-->
      <!--<result column="count" property="count"/>-->
      <!--<result column="productMoney" property="money"/>-->
      <!--<result column="productName" property="productName"/>-->
      <!--<result column="house_code" property="houseCode"/>-->
    <!--</collection>-->
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, client_id, emp_id, order_type, create_date, money, order_code, reserver_count, is_comment
  </sql>
  <!--查询所有客房订单-->
  <select id="selectOrderList" resultMap="BaseResultMap">
    select distinct oh.house_type_id,h.type_name,o.*,c.name as clientName
    from `order` o,client c,order_house_detail oh,house_type h
    where o.client_id=c.id and o.id=oh.order_id and oh.house_type_id = h.id and o.order_type=0
    <if test="orderCode!=null and orderCode!=''">
       and o.order_code=#{orderCode}
    </if>
    <if test="orderStatus!=null and orderStatus!=''">
       and o.order_status=#{orderStatus}
    </if>
    <if test="clientName!=null and clientName!=''">
      and c.name=#{clientName}
    </if>
  </select>

  <!--查询所有将要退房的订单-->
  <select id="selectOrderCheckOuts" resultMap="BaseResultMap">
    select o.*,c.name as clientName,h.house_code,
    (select type_name from house_type where house_type.id=h.house_type_id) houseType,
    h.money houseMoney,h.start_date,h.end_date,h.house_type_id,h.id houseOrderId

    from `order` o,client c,order_house_detail h


    where o.client_id=c.id  and h.order_id=o.id and o.order_type=0
    and  <![CDATA[h.end_date<now()and o.order_status=3]]>
  </select>

<!--商品订单-->
  <select id="selectProductOrderList" resultMap="BaseResultMap">
    select o.*,c.name as clientName from `order` o,client c
    where o.client_id=c.id and o.order_type=1
    <if test="orderCode!=null and orderCode!=''">
      and instr(order_code,#{orderCode})>0
    </if>
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.li.pojo.Order" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `order`
    (client_id, emp_id, order_type, create_date, money, order_code, reserver_count, is_comment, order_status)
    values (#{clientId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{orderType,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{money,jdbcType=INTEGER}, #{orderCode,jdbcType=VARCHAR},
      #{reserverCount,jdbcType=INTEGER},#{isComment,jdbcType=INTEGER},#{orderStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.li.pojo.Order" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        client_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.li.pojo.Order">
    <!--@mbg.generated-->
    update `order`
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="isComment != null">
        is_comment = #{isComment}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.li.pojo.Order">
    <!--@mbg.generated-->
    update order
    set client_id = #{clientId,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=INTEGER},
      order_code = #{orderCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAllCount" resultType="java.lang.Integer">
    select count(1) from `order`
    <where>
      <if test="type==0">
        and order_type=#{type}
      </if>
      <if test="type==1">
        and order_type=#{type}
      </if>
      <if test="type==3">
        and order_status=#{type}
      </if>
    </where>
  </select>

  <select id="selectOrderInfoByClientId" resultType="cn.li.pojo.MemberOrder">
    SELECT id, order_code orderCode,order_type orderType,money money,create_date createDate,order_status orderStatus,is_comment isComment
    FROM `order` a
    WHERE a.client_id = #{clientId}
    ORDER BY orderStatus ASC
  </select>

  <select id="selectCountAllByClientId" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM `order` WHERE client_id = #{clientId}
  </select>

  <update id="updateOrderStatusByClientIdAndOrderId">
    UPDATE `order` SET order_status = 2 WHERE order_code = #{orderCode} AND client_id = #{clientId}
  </update>

  <!-- 根据订单号查出订单详情中该客户入住的房间类型 -->
  <select id="selectHouseTypeByOrderId" resultType="java.lang.Integer">
    select distinct house_type_id FROM order_house_detail where order_id = #{orderId}
  </select>


  <delete id="updateOrderPriductStatus">
    update `order` set order_status=1 where id=#{id}
  </delete>

  <select id="selectDayHouseMoenyById" resultType="java.lang.Integer">
    SELECT distinct o.money/o.reserver_count/(DATE(oh.end_date)-DATE(oh.start_date)) 'dayMoney'
    FROM `order` o
    INNER JOIN `order_house_detail` AS oh ON o.id = oh.order_id
    WHERE o.id = #{id}
  </select>
</mapper>