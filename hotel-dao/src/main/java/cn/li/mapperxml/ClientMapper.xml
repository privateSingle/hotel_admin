<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.li.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="cn.li.pojo.Client">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="ID_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_vip" jdbcType="INTEGER" property="isVip" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="balance" jdbcType="VARCHAR" property="balance" />
    <result column="creat_time" jdbcType="BIGINT" property="creatTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, age, sex, ID_card, phone, email, `password`, is_vip, score, remark, balance
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from client
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.li.pojo.Client" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into client (`name`, age, sex,
      ID_card, phone, email,
      `password`, is_vip, score,
      remark,`balance`)
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR},
      #{idCard,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{isVip,jdbcType=INTEGER}, #{score,jdbcType=INTEGER},
      #{remark,jdbcType=VARCHAR},#{balance,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.li.pojo.Client" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idCard != null">
        ID_card,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="isVip != null">
        is_vip,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isVip != null">
        #{isVip,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.li.pojo.Client">
    <!--@mbg.generated-->
    update client
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="idCard != null">
        ID_card = #{idCard,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isVip != null">
        is_vip = #{isVip,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--更新Client信息-->
  <update id="updateByPrimaryKey" parameterType="cn.li.pojo.Client">
    <!--@mbg.generated-->
    update client
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      ID_card = #{idCard,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      is_vip = #{isVip,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
      balance = #{balance,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询全部客户信息-->
  <select id="selectAllInfo" resultMap="BaseResultMap" parameterType="cn.li.pojo.SearchPojo">
    SELECT <include refid="Base_Column_List" />
    FROM `client`
    <where>
      <if test="clientName != null and clientName != ''">
        `name` LIKE CONCAT('%',#{clientName},'%')
      </if>
      <if test="clientPhone != null and clientPhone != ''">
        AND `phone` LIKE CONCAT('%',#{clientPhone},'%')
      </if>
    </where>
  </select>

  <!--查询总条数-->
  <select id="selectCountAll" resultType="java.lang.Integer" parameterType="cn.li.pojo.SearchPojo">
    SELECT COUNT(1) FROM `client`
    <where>
      <if test="clientName != null and clientName != ''">
        `name` LIKE CONCAT('%',#{clientName},'%')
      </if>
      <if test="clientPhone != null and clientPhone != ''">
        AND `phone` LIKE CONCAT('%',#{clientPhone},'%')
      </if>
    </where>
  </select>

  <!--删除客户信息-->
  <delete id="deleteById" parameterType="String">
    DELETE FROM `client` WHERE id IN (${ids})
  </delete>

  <!--用户前台页面登录验证-->
  <select id="loginVerifyByPassword" parameterType="cn.li.pojo.Client" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM client
    WHERE password = #{password}
    <if test="email != null and email != ''">
      AND email = #{email}
    </if>
    <if test="phone != null and phone != ''">
      AND phone = #{phone}
    </if>
  </select>

  <!--通过邮箱和用户名验证用户是否匹配-->
  <select id="verifyEmailAndName" resultMap="BaseResultMap" parameterType="cn.li.pojo.Client">
    SELECT <include refid="Base_Column_List"/> FROM client
    <where>
      <if test="name != null and name != ''">
        `name` = #{name}
      </if>
      <if test="email != null and email != ''">
        AND email = #{email}
      </if>
    </where>
  </select>

  <!--根据客户ID修改客户余额-->
  <update id="orderSettlement">
    update client set balance=balance-#{money} where id = #{clientId}
  </update>

  <!--根据邮箱查询一个用户-->
  <select id="selectClientInfoByEmail" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM `client` WHERE `email` = #{email}
  </select>
</mapper>
