<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.li.mapper.MultipleMapper">
  <resultMap id="BaseResultMap" type="cn.li.pojo.Multiple">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="master_name" jdbcType="VARCHAR" property="masterName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, address, business, master_name, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from multiple
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from multiple
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.li.pojo.Multiple">
    <!--@mbg.generated-->
    insert into multiple (id, `name`, address, 
      business, master_name, phone
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{business,jdbcType=VARCHAR}, #{masterName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.li.pojo.Multiple">
    <!--@mbg.generated-->
    insert into multiple
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="masterName != null">
        master_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="masterName != null">
        #{masterName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--选择性修改分店信息-->
  <update id="updateByPrimaryKeySelective" parameterType="cn.li.pojo.Multiple">
    <!--@mbg.generated-->
    update multiple
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="masterName != null">
        master_name = #{masterName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--修改分店信息-->
  <update id="updateByPrimaryKey" parameterType="cn.li.pojo.Multiple">
    <!--@mbg.generated-->
    update multiple
    set `name` = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      master_name = #{masterName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询全部信息-->
  <select id="selectAllInfo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM multiple
  </select>

    <!--查询总记录数-->
  <select id="selectAllCount" resultType="java.lang.Integer">
      SELECT COUNT(1)
      FROM multiple
  </select>

  <!--删除一条或多条连锁店信息-->
  <delete id="deleteMultipleInfo" parameterType="string">
    DELETE FROM multiple
    WHERE id IN (${ids})
  </delete>
</mapper>